buildscript {
    repositories {
        mavenCentral()
        jcenter()
        //maven {
        //	name = "forge"
        //	url = "https://files.minecraftforge.net/maven"
        //}
        maven {
            name = "gt"
            url = "https://gregtech.mechaenetia.com/"
        }
        maven {
            name = "gtnh"
            url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name 'CB Repo'
            url "http://chickenbones.net/maven/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.11'
        //classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        //classpath 'net.onedaybeard.artemis:artemis-odb-gradle-plugin:2.2.0'
        //classpath 'net.onedaybeard.artemis:artemis-fluid-gradle-plugin:2.2.0'
    }
}

repositories {
    //// Main storage for CodeChickenCore, NotEnoughItems
    //// CodeChickenLib is in the Forge maven
    maven {
    	name = "chickenbones"
    	url = "http://chickenbones.net/maven/"
    }
    //maven {
    //	name = "forge"
    //	url = "https://files.minecraftforge.net/maven"
    //}
    maven {
        name = "gt"
        url = "https://gregtech.mechaenetia.com/"
    }
    maven {
        name = "gtnh"
        url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

apply plugin: 'java'
apply plugin: 'forge'

ext.propFile = file "build.properties"

propFile.withReader {
	
	def prop = new Properties()
	prop.load(it)
	project.ext.props = new ConfigSlurper().parse prop
}

version = props.ac_version
group= "com.shinoow.abyssalcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AbyssalCraft"

sourceCompatibility = 8
targetCompatibility = 8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "instance"
    // This is how you rename a namespace
    //srgExtra "PK: com/artemis gregtech/thirdparty/com/artemis"
    //srgExtra "PK: net/mostlyoriginal gregtech/thirdparty/net/mostlyoriginal"
    //srgExtra "PK: net/fbridault/eeel gregtech/thirdparty/net/fbridault/eeel"
    replaceIn "AbyssalCraft.java"
    replace "forgeversion", props.forge_version
}


dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
}

version = "${props.mc_version}-${props.ac_version}"

processResources
{
	// I really don't want that file to exist anywhere
	exclude '**/Thumbs.db'

	// this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		include 'version.properties'

        // replace version and mcversion
        expand ([
			'version':project.version,
			'acversion':project.props.ac_version,
			'mcversion':project.props.mc_version,
			'forgeversion':project.props.forge_version
		])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'version.properties'
    }
}
	
	task srcJar(type: Jar) {
    from sourceSets.main.allSource
	
	extension = 'jar'
	classifier = 'src'
}

	task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}

	task apiZip(type: Zip) {
		from(sourceSets.main.java){
		include 'com/shinoow/abyssalcraft/api/**'
	}
	
	extension = 'zip'
	classifier = 'api'
}

	artifacts {
    archives srcJar, devJar, apiZip
}
